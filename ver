This is a CORS (Cross-Origin Resource Sharing) issue. The error indicates your backend server needs to be configured to allow credentials and proper CORS headers. Here are the solutions:

## Frontend Fix (Immediate):

**1. Update your `apiClient.ts` to handle credentials properly:**

```typescript
import axios from 'axios';

const apiClient = axios.create({
  baseURL: 'https://product-verification-blockchain.onrender.com',
  timeout: 10000,
  withCredentials: true, // Add this
  headers: {
    'Content-Type': 'application/json',
  }
});

// Add token to requests
apiClient.interceptors.request.use((config) => {
  const token = localStorage.getItem('token') || localStorage.getItem('authToken');
  if (token) {
    config.headers.Authorization = `Bearer ${token}`;
  }
  return config;
});

// Handle CORS errors
apiClient.interceptors.response.use(
  (response) => response,
  (error) => {
    if (error.code === 'ERR_NETWORK') {
      console.error('CORS or network error:', error);
    }
    return Promise.reject(error);
  }
);

export default apiClient;
```

## Backend Fix (Required):

Your backend server needs proper CORS configuration. Add this to your backend:

**For Express.js backend:**

```javascript
const cors = require('cors');

app.use(cors({
  origin: ['http://localhost:3000', 'http://localhost:5173', 'https://your-frontend-domain.com'],
  credentials: true, // This is crucial - must be true
  methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],
  allowedHeaders: ['Content-Type', 'Authorization']
}));

// Handle preflight requests
app.options('*', cors());
```

**Alternative temporary fix (less secure):**

```javascript
app.use(cors({
  origin: true, // Allow all origins temporarily
  credentials: true
}));
```

## Environment-specific solution:

**Development:**
```javascript
origin: ['http://localhost:3000', 'http://localhost:5173']
```

**Production:**
```javascript
origin: ['https://your-frontend-domain.vercel.app']
```

The key issue is that your backend's CORS configuration doesn't have `credentials: true` set properly, which is required when your frontend sends `withCredentials: true`.

Contact your backend developer or update your backend CORS settings to include `credentials: true` and your frontend domain in the allowed origins.